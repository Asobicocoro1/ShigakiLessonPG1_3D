using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/*
 ### メッシュとスキンの詳細

#### メッシュ (Mesh)
メッシュは、3Dオブジェクトの表面を構成する頂点の集合で、以下の要素から成ります：
- **頂点 (Vertices)**: メッシュの各ポイント。
- **エッジ (Edges)**: 頂点間の線。
- **ポリゴン (Polygons)**: エッジによって囲まれた平面。通常は三角形または四角形。
- **UVマッピング (UV Mapping)**: 2Dテクスチャをメッシュの表面にマッピングするための座標。

#### スキン (Skin)
スキンは、メッシュがボーン（骨）によって変形する仕組みです。各頂点にはスキンウェイトが割り当てられ、どのボーンにどの程度影響を受けるかが決まります。ボーンは、メッシュの特定の部分を動かすための仮想的な骨です。

#### スキンメッシュレンダラー (Skinned Mesh Renderer)
Skinned Mesh Renderer は、スキンメッシュをレンダリングするためのコンポーネントで、ボーンの変形に従ってメッシュを動かし、アニメーションを実現します。

### インスペクターの各項目の説明

1. **Quality (品質)**
   - メッシュのスキンニングの品質を設定します。高品質に設定すると、より滑らかな変形が可能ですが、パフォーマンスに影響を与えることがあります。

2. **Update When Offscreen (画面外でも更新)**
   - 画面外にある場合でもメッシュを更新するかどうかを設定します。オフにすると、パフォーマンスが向上します。

3. **Root Bone (ルートボーン)**
   - スキンメッシュが影響を受ける最上位のボーンを指定します。通常、キャラクターのヒップボーンやペルビスボーンが設定されます。

4. **Bones (ボーン)**
   - スキンメッシュが影響を受けるすべてのボーンのリストです。

5. **Bounds (境界)**
   - メッシュの境界を設定します。自動的に計算されることもありますが、手動で設定することでより正確な境界が指定できます。

6. **Blend Shapes (ブレンドシェイプ)**
   - メッシュの特定の部分を変形させるためのシェイプキーです。顔の表情など、微細な変形に使用されます。

### 最適化のヒント

1. **メッシュの圧縮**
   - ディスクスペースを節約するためにメッシュを圧縮します。圧縮レベルによっては、精度に影響を与えることがあります。

2. **Read/Write 無効化**
   - メッシュのメモリ使用量を減らすために、Read/Write オプションを無効にします。

3. **不要なリグとブレンドシェイプの無効化**
   - スケルトンやブレンドシェイプアニメーションが不要な場合、これらのオプションを無効にします。

4. **スキンメッシュの最適化**
   - SkinnedMeshRenderer を使用しているオブジェクトが本当に必要か確認します。アニメーションが必要ない場合、BakeMesh 関数を使用してメッシュを静的なポーズに固定し、MeshRenderer に切り替えることができます。

### 参考資料

- **[Optimize SkinnedMeshRenderers](https://docs.unity3d.com/2021.1/Documentation/Manual/class-SkinnedMeshRenderer.html)** 【12:2†JW-10207_Unity_eBook_OptimizeYourMobileGamePerformance_V6_May2021.pdf】
- **[Skinned Mesh sampling effects](https://docs.unity3d.com/2021.1/Documentation/Manual/class-SkinnedMeshRenderer.html)** 【12:0†The_definitive_guide_to_creating_advanced_visual_effects_in_Unity.pdf】

これらの設定と最適化方法を理解することで、キャラクターアニメーションの品質とパフォーマンスのバランスを取ることができます。



### Skinned Mesh Renderer インスペクター用語の詳細

#### Materials (マテリアル)
- **Size (サイズ)**: 使用するマテリアルの数を設定します。
- **Element 0, Element 1, ... (エレメント 0, エレメント 1, ...)**: 各マテリアルスロットに割り当てられるマテリアル。各スロットには異なるマテリアルを設定できます。

#### Lighting (ライティング)
- **Cast Shadows (影をキャストする)**: オブジェクトが影を生成するかどうかを設定します。
  - オプション: **On (オン)**, **Off (オフ)**, **Two Sided (両面)**

- **Receive Shadows (影を受ける)**: オブジェクトが他のオブジェクトの影を受けるかどうかを設定します。

- **Motion Vectors (モーションベクター)**: モーションベクターを使用して動きのブラー効果を有効にするかどうかを設定します。
  - オプション: **Camera (カメラ)**, **Object (オブジェクト)**, **None (なし)**

- **Skinned Motion Vectors (スキンモーションベクター)**: スキンメッシュのモーションベクターを使用するかどうかを設定します。

#### Probes (プローブ)
- **Light Probes (ライトプローブ)**: 動的オブジェクトがライトプローブのデータを使用するかどうかを設定します。
  - オプション: **Off (オフ)**, **Blend Probes (ブレンドプローブ)**, **Use Proxy Volume (プロキシボリュームを使用)**

- **Reflection Probes (リフレクションプローブ)**: 環境のリフレクションをキャプチャして使用するかどうかを設定します。
  - オプション: **Off (オフ)**, **Blend Probes (ブレンドプローブ)**, **Blend Probes and Skybox (ブレンドプローブとスカイボックス)**, **Simple (シンプル)**

#### Additional Settings (アディショナルセッティング)
- **Update When Offscreen (画面外でも更新)**: オブジェクトが画面外にある場合でもメッシュを更新するかどうかを設定します。

- **Bounds (境界)**
  - **Center (中心)**: 境界ボックスの中心位置を設定します。
  - **Size (サイズ)**: 境界ボックスの大きさを設定します。

- **Quality (品質)**: メッシュのスキンニングの品質を設定します。
  - オプション: **Auto (自動)**, **High (高品質)**, **Medium (中品質)**, **Low (低品質)**

### 順番に設定項目の詳細とその効果

1. **Materials (マテリアル)**
   - **Size (サイズ)**: 使用するマテリアルの数を設定し、各スロットに割り当てます。
   - **Element 0, Element 1, ... (エレメント 0, エレメント 1, ...)**: 各スロットに異なるマテリアルを設定することで、メッシュの見た目をカスタマイズできます。

2. **Lighting (ライティング)**
   - **Cast Shadows (影をキャストする)**: オブジェクトが影を生成するか設定し、シーンのリアリズムを向上させます。
   - **Receive Shadows (影を受ける)**: 他のオブジェクトの影を受けることで、オブジェクトの外観がシーン内でより自然になります。
   - **Motion Vectors (モーションベクター)**: モーションブラー効果を有効にし、動きの滑らかさを向上させます。
   - **Skinned Motion Vectors (スキンモーションベクター)**: スキンメッシュの動きに対応したモーションベクターを使用します。

3. **Probes (プローブ)**
   - **Light Probes (ライトプローブ)**: ライトプローブを使用して、動的オブジェクトのライティングを改善します。
   - **Reflection Probes (リフレクションプローブ)**: 環境のリフレクションをキャプチャし、リアルな反射を作成します。

4. **Additional Settings (アディショナルセッティング)**
   - **Update When Offscreen (画面外でも更新)**: オブジェクトが画面外にあっても更新するかどうかを設定し、常にキャラクターの位置やアニメーションを正しく保ちます。
   - **Bounds (境界)**: 境界ボックスの中心位置とサイズを設定し、レンダリングの最適化を図ります。
   - **Quality (品質)**: メッシュのスキンニング品質を設定し、滑らかな変形とパフォーマンスを調整します。

これらの設定を理解し、プロジェクトの要件に合わせて調整することで、シーンの視覚品質とパフォーマンスを最適化できます。

細かい用語一覧
### Skinned Mesh Renderer の詳細設定と効果の解説

#### ブラー効果 (Motion Vectors)
**モーションベクター (Motion Vectors)** は、動きのブラー効果を実現するために使用されます。これにより、オブジェクトが動く際に残像が生じ、より滑らかな動きを視覚的に表現できます。

- **Camera (カメラ)**: カメラの動きを基にモーションベクターを生成します。
- **Object (オブジェクト)**: オブジェクトの動きを基にモーションベクターを生成します。
- **None (なし)**: モーションベクターを使用しません。

**効果**: モーションブラー効果を有効にすると、動きのあるシーンで滑らかな動きを強調できますが、パフォーマンスに影響を与えることがあります。

#### Blend Probes (ブレンドプローブ)
**Blend Probes (ブレンドプローブ)** は、複数のライトプローブからのライティングデータをブレンドして、動的オブジェクトに適用する機能です。これにより、シーン内の異なる照明条件を自然に適応することができます。

**効果**: ライトプローブをブレンドすることで、動的オブジェクトがシーンの照明条件によりリアルに適応し、滑らかなライティング遷移が実現します。

#### Use Proxy Volume (プロキシボリュームを使用)
**Use Proxy Volume (プロキシボリュームを使用)** は、複雑なライトプローブの配置をシンプルなボリュームに置き換え、計算を簡略化する機能です。プロキシボリュームは、複雑なシーンでも効率的にライティングを計算するために使用されます。

**効果**: プロキシボリュームを使用することで、計算コストを削減しながらも、適切なライティングを提供できます。特に大規模なシーンや多数のライトプローブがある場合に有効です。

#### スキンニングのモーションベクター
**スキンニングのモーションベクター (Skinned Motion Vectors)** は、スキンメッシュの動きに対応するモーションベクターを生成します。これは、スキンメッシュが変形する際の動きを正確に反映するために使用されます。

**効果**: スキンメッシュのアニメーションが滑らかに表示され、動きのブラー効果がリアルに再現されます。これにより、キャラクターのアニメーションがより自然に見えます。

#### Light Probes (ライトプローブ)
**Light Probes (ライトプローブ)** は、シーン内の特定のポイントでの光の情報をキャプチャし、動的オブジェクトのライティングを改善するために使用されます。ライトプローブのデータをブレンドして適用することで、動的オブジェクトが周囲の照明条件に自然に適応します。

**効果**: ライトプローブを使用することで、シーンのライティングが動的オブジェクトに対しても正確に適用され、リアルなライティング効果を得ることができます。

#### Reflection Probes (リフレクションプローブ)
**Reflection Probes (リフレクションプローブ)** は、環境のリフレクションをキャプチャし、オブジェクトに反映するためのデータを提供します。リフレクションプローブは、リアルな反射効果を作成するために重要です。

- **Off (オフ)**: リフレクションプローブを使用しません。
- **Blend Probes (ブレンドプローブ)**: 複数のリフレクションプローブのデータをブレンドして使用します。
- **Blend Probes and Skybox (ブレンドプローブとスカイボックス)**: リフレクションプローブとスカイボックスのデータをブレンドして使用します。
- **Simple (シンプル)**: 単一のリフレクションプローブを使用します。

**効果**: リフレクションプローブを使用することで、オブジェクト表面にリアルな反射が表示され、環境の詳細が反映されます。これにより、メタルやガラスのような表面のオブジェクトがリアルに見えます。

これらの設定を理解し、適切に使用することで、シーンの視覚品質とパフォーマンスを最適化することができます。
 */
public class SkinnedMeshRenderer : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
